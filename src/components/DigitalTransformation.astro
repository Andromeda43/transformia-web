---
---

<div class="digital-transformation-visualization">
    <div class="transformation-container">
      <!-- Proceso de transformación -->
      <div class="transformation-stages">
        <div class="stage analog">
          <div class="stage-header">
            <svg class="stage-icon" viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
              <line x1="8" y1="21" x2="16" y2="21"></line>
              <line x1="12" y1="17" x2="12" y2="21"></line>
            </svg>
            <h3>Sistemas Tradicionales</h3>
          </div>
          <div class="stage-features">
            <div class="feature">Procesos manuales</div>
            <div class="feature">Sistemas aislados</div>
            <div class="feature">Menor eficiencia</div>
            <div class="feature">Datos limitados</div>
          </div>
        </div>
        
        <div class="connector">
          <svg viewBox="0 0 40 24" width="40" height="24" class="arrow-icon">
            <path d="M0 12H34M34 12L22 2M34 12L22 22" stroke="currentColor" stroke-width="2" fill="none"></path>
          </svg>
        </div>
        
        <div class="stage transform">
          <div class="stage-header">
            <svg class="stage-icon" viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="23 4 23 10 17 10"></polyline>
              <polyline points="1 20 1 14 7 14"></polyline>
              <path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>
            </svg>
            <h3>Transformación Digital</h3>
          </div>
          <div class="stage-features">
            <div class="feature">Automatización</div>
            <div class="feature">Integración</div>
            <div class="feature">Optimización</div>
            <div class="feature">Innovación</div>
          </div>
        </div>
        
        <div class="connector">
          <svg viewBox="0 0 40 24" width="40" height="24" class="arrow-icon">
            <path d="M0 12H34M34 12L22 2M34 12L22 22" stroke="currentColor" stroke-width="2" fill="none"></path>
          </svg>
        </div>
        
        <div class="stage digital">
          <div class="stage-header">
            <svg class="stage-icon" viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect>
              <rect x="9" y="9" width="6" height="6"></rect>
              <line x1="9" y1="1" x2="9" y2="4"></line>
              <line x1="15" y1="1" x2="15" y2="4"></line>
              <line x1="9" y1="20" x2="9" y2="23"></line>
              <line x1="15" y1="20" x2="15" y2="23"></line>
              <line x1="20" y1="9" x2="23" y2="9"></line>
              <line x1="20" y1="14" x2="23" y2="14"></line>
              <line x1="1" y1="9" x2="4" y2="9"></line>
              <line x1="1" y1="14" x2="4" y2="14"></line>
            </svg>
            <h3>Ecosistema Digital</h3>
          </div>
          <div class="stage-features">
            <div class="feature">Sistemas inteligentes</div>
            <div class="feature">Datos centralizados</div>
            <div class="feature">Escalabilidad</div>
            <div class="feature">Mejora continua</div>
          </div>
        </div>
      </div>
      
      <!-- Indicadores de progreso -->
      <div class="progress-indicators">
        <div class="progress-bar-container">
          <div class="progress-label">Progreso de transformación</div>
          <div class="progress-bar">
            <div class="progress-fill"></div>
            <div class="progress-marker" style="left: 75%">
              <div class="marker-label">Estado actual</div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Panel de beneficios -->
    <div class="benefits-panel">
      <div class="benefits-title">Beneficios de la Transformación</div>
      
      <div class="benefits-grid">
        <div class="benefit-item">
          <div class="benefit-icon efficiency">
            <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
              <polyline points="12 6 12 12 16 14"></polyline>
            </svg>
          </div>
          <div class="benefit-content">
            <div class="benefit-title">Eficiencia Operativa</div>
            <div class="benefit-value">+68%</div>
          </div>
        </div>
        
        <div class="benefit-item">
          <div class="benefit-icon agility">
            <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"></path>
            </svg>
          </div>
          <div class="benefit-content">
            <div class="benefit-title">Agilidad Empresarial</div>
            <div class="benefit-value">+53%</div>
          </div>
        </div>
        
        <div class="benefit-item">
          <div class="benefit-icon data">
            <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 16V8a2 2 0 00-1-1.73l-7-4a2 2 0 00-2 0l-7 4A2 2 0 003 8v8a2 2 0 001 1.73l7 4a2 2 0 002 0l7-4A2 2 0 0021 16z"></path>
              <polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline>
              <line x1="12" y1="22.08" x2="12" y2="12"></line>
            </svg>
          </div>
          <div class="benefit-content">
            <div class="benefit-title">Aprovechamiento de Datos</div>
            <div class="benefit-value">+89%</div>
          </div>
        </div>
        
        <div class="benefit-item">
          <div class="benefit-icon customer">
            <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M17 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"></path>
              <circle cx="9" cy="7" r="4"></circle>
              <path d="M23 21v-2a4 4 0 00-3-3.87"></path>
              <path d="M16 3.13a4 4 0 010 7.75"></path>
            </svg>
          </div>
          <div class="benefit-content">
            <div class="benefit-title">Experiencia de Cliente</div>
            <div class="benefit-value">+45%</div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <style>
    .digital-transformation-visualization {
      background-color: rgba(20, 20, 35, 0.85);
      border-radius: 10px;
      border: 1px solid rgba(176, 66, 255, 0.5);
      overflow: hidden;
      box-shadow: 
        0 0 15px rgba(176, 66, 255, 0.3),
        0 0 30px rgba(176, 66, 255, 0.1);
      backdrop-filter: blur(10px);
      height: 100%;
      display: flex;
      flex-direction: column;
      position: relative;
    }
  
    /* Contenedor principal */
    .transformation-container {
      position: relative;
      height: 320px;
      padding: 20px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      background: linear-gradient(135deg, rgba(30, 30, 60, 0.5) 0%, rgba(15, 15, 30, 0.7) 100%);
    }
  
    /* Etapas de transformación */
    .transformation-stages {
      display: flex;
      justify-content: space-between;
      align-items: stretch;
      gap: 5px;
      height: 220px;
    }
  
    .stage {
      flex: 1;
      display: flex;
      flex-direction: column;
      background-color: rgba(30, 30, 50, 0.7);
      border-radius: 8px;
      border: 1px solid;
      padding: 15px;
      transition: all 0.3s ease;
    }
  
    .stage.analog {
      border-color: rgba(100, 200, 255, 0.5);
      box-shadow: 0 0 10px rgba(100, 200, 255, 0.2);
    }
  
    .stage.transform {
      border-color: rgba(250, 200, 100, 0.5);
      box-shadow: 0 0 10px rgba(250, 200, 100, 0.2);
    }
  
    .stage.digital {
      border-color: rgba(255, 100, 200, 0.5);
      box-shadow: 0 0 10px rgba(255, 100, 200, 0.2);
    }
  
    .stage-header {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 15px;
    }
  
    .stage-icon {
      width: 30px;
      height: 30px;
      padding: 5px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  
    .analog .stage-icon {
      color: #64c8ff;
      background-color: rgba(100, 200, 255, 0.1);
    }
  
    .transform .stage-icon {
      color: #fac864;
      background-color: rgba(250, 200, 100, 0.1);
    }
  
    .digital .stage-icon {
      color: #ff64c8;
      background-color: rgba(255, 100, 200, 0.1);
    }
  
    .stage-header h3 {
      font-family: 'Space Mono', monospace;
      font-size: 0.9rem;
      font-weight: 700;
      color: #fff;
      margin: 0;
    }
  
    .stage-features {
      display: flex;
      flex-direction: column;
      gap: 10px;
      flex-grow: 1;
      justify-content: center;
    }
  
    .feature {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 0.8rem;
      color: rgba(255, 255, 255, 0.8);
      padding: 6px 10px;
      border-radius: 4px;
      background-color: rgba(255, 255, 255, 0.05);
      display: flex;
      align-items: center;
    }
  
    .feature::before {
      content: '•';
      margin-right: 8px;
      font-size: 1.2em;
      line-height: 0;
    }
  
    .analog .feature::before {
      color: #64c8ff;
    }
  
    .transform .feature::before {
      color: #fac864;
    }
  
    .digital .feature::before {
      color: #ff64c8;
    }
  
    /* Conectores entre etapas */
    .connector {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      flex-shrink: 0;
    }
  
    .arrow-icon {
      color: rgba(176, 66, 255, 0.7);
      animation: pulse-arrow 2s infinite ease-in-out;
    }
  
    @keyframes pulse-arrow {
      0%, 100% {
        opacity: 0.7;
        transform: translateX(0);
      }
      50% {
        opacity: 1;
        transform: translateX(3px);
      }
    }
  
    /* Indicadores de progreso */
    .progress-indicators {
      margin-top: 20px;
    }
  
    .progress-bar-container {
      width: 100%;
    }
  
    .progress-label {
      font-family: 'Space Mono', monospace;
      font-size: 0.8rem;
      color: rgba(255, 255, 255, 0.7);
      margin-bottom: 8px;
    }
  
    .progress-bar {
      height: 10px;
      background-color: rgba(30, 30, 50, 0.5);
      border-radius: 5px;
      position: relative;
    }
  
    .progress-fill {
      height: 100%;
      width: 75%;
      background: linear-gradient(90deg, rgba(100, 200, 255, 0.7) 0%, rgba(176, 66, 255, 0.7) 50%, rgba(255, 100, 200, 0.7) 100%);
      border-radius: 5px;
      animation: fill-progress 3s ease-out forwards;
    }
  
    @keyframes fill-progress {
      0% {
        width: 0%;
      }
      100% {
        width: 75%;
      }
    }
  
    .progress-marker {
      position: absolute;
      top: -15px;
      width: 20px;
      height: 20px;
      background-color: #b042ff;
      border-radius: 50%;
      transform: translateX(-50%);
      box-shadow: 0 0 10px rgba(176, 66, 255, 0.7);
    }
  
    .marker-label {
      position: absolute;
      top: -25px;
      left: 50%;
      transform: translateX(-50%);
      white-space: nowrap;
      font-family: 'Space Grotesk', sans-serif;
      font-size: 0.7rem;
      color: #fff;
      background-color: rgba(176, 66, 255, 0.3);
      padding: 3px 8px;
      border-radius: 4px;
    }
  
    /* Panel de beneficios */
    .benefits-panel {
      background-color: rgba(15, 15, 25, 0.7);
      border-top: 1px solid rgba(176, 66, 255, 0.3);
      padding: 15px 20px;
    }
  
    .benefits-title {
      font-family: 'Space Mono', monospace;
      font-size: 1rem;
      font-weight: 700;
      color: #fff;
      margin-bottom: 15px;
    }
  
    .benefits-grid {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 15px;
    }
  
    .benefit-item {
      background-color: rgba(30, 30, 50, 0.5);
      border-radius: 8px;
      padding: 15px;
      display: flex;
      align-items: center;
      gap: 12px;
    }
  
    .benefit-icon {
      width: 40px;
      height: 40px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
    }
  
    .benefit-icon.efficiency {
      background-color: rgba(74, 239, 158, 0.1);
      color: #4aef9e;
    }
  
    .benefit-icon.agility {
      background-color: rgba(250, 200, 100, 0.1);
      color: #fac864;
    }
  
    .benefit-icon.data {
      background-color: rgba(100, 200, 255, 0.1);
      color: #64c8ff;
    }
  
    .benefit-icon.customer {
      background-color: rgba(255, 100, 200, 0.1);
      color: #ff64c8;
    }
  
    .benefit-content {
      flex-grow: 1;
    }
  
    .benefit-title {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 0.75rem;
      color: rgba(255, 255, 255, 0.7);
      margin-bottom: 5px;
    }
  
    .benefit-value {
      font-family: 'Space Mono', monospace;
      font-size: 1.2rem;
      font-weight: 700;
      color: #fff;
    }
  
    /* Media queries */
    @media (max-width: 768px) {
      .transformation-container {
        padding: 15px;
      }
      
      .transformation-stages {
        flex-direction: column;
        gap: 15px;
        height: auto;
      }
      
      .stage {
        width: 100%;
      }
      
      .connector {
        transform: rotate(90deg);
        width: 100%;
        margin: -5px 0;
      }
      
      .benefits-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  </style>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Función para animar elementos con efecto de entrada
      function animateEntrance() {
        const stages = document.querySelectorAll('.stage');
        const benefits = document.querySelectorAll('.benefit-item');
        
        // Animar etapas de transformación
        stages.forEach((stage, index) => {
          stage.style.opacity = '0';
          stage.style.transform = 'translateY(20px)';
          
          setTimeout(() => {
            stage.style.transition = 'all 0.6s ease';
            stage.style.opacity = '1';
            stage.style.transform = 'translateY(0)';
          }, 300 + (index * 200));
        });
        
        // Animar beneficios
        benefits.forEach((benefit, index) => {
          benefit.style.opacity = '0';
          benefit.style.transform = 'translateY(10px)';
          
          setTimeout(() => {
            benefit.style.transition = 'all 0.4s ease';
            benefit.style.opacity = '1';
            benefit.style.transform = 'translateY(0)';
          }, 1200 + (index * 100));
        });
      }
      
      // Función para animar valores de beneficios
      function animateBenefitValues() {
        const benefitValues = document.querySelectorAll('.benefit-value');
        
        benefitValues.forEach((valueElement) => {
          const targetValue = parseInt(valueElement.textContent.replace(/[^0-9.-]/g, ''));
          let startValue = 0;
          let duration = 2000; // 2 segundos
          let startTime = null;
          
          function updateValue(timestamp) {
            if (!startTime) startTime = timestamp;
            let progress = (timestamp - startTime) / duration;
            
            if (progress > 1) progress = 1;
            
            // Función de ease-out para una animación más natural
            progress = 1 - Math.pow(1 - progress, 3);
            
            const currentValue = Math.floor(startValue + (targetValue - startValue) * progress);
            valueElement.textContent = '+' + currentValue + '%';
            
            if (progress < 1) {
              requestAnimationFrame(updateValue);
            }
          }
          
          requestAnimationFrame(updateValue);
        });
      }
      
      // Función para animar la barra de progreso periódicamente
      function animateProgressPeriodically() {
        const progressFill = document.querySelector('.progress-fill');
        const progressMarker = document.querySelector('.progress-marker');
        
        setInterval(() => {
          // Valor actual
          let currentWidth = parseInt(progressFill.style.width || '75');
          
          // Generar cambio aleatorio de -3% a +3%
          const delta = Math.random() * 6 - 3;
          
          // Limitar el rango de 60% a 95%
          let newWidth = Math.max(60, Math.min(95, currentWidth + delta));
          
          // Animar el cambio
          progressFill.style.transition = 'width 2s ease';
          progressFill.style.width = newWidth + '%';
          
          // Actualizar la posición del marcador
          progressMarker.style.transition = 'left 2s ease';
          progressMarker.style.left = newWidth + '%';
        }, 10000); // Cada 10 segundos
      }
      
      // Inicializar animaciones
      setTimeout(() => {
        animateEntrance();
        setTimeout(animateBenefitValues, 1500);
        animateProgressPeriodically();
      }, 500);
    });
  </script>