---
// MetodologiaCycle.astro - Timeline interactivo mejorado con alineación perfecta
---

<div class="cyber-cycle">
    <!-- Fondo con grid animado -->
    <div class="grid-background"></div>
    
    <!-- Timeline interactivo completo -->
    <div class="timeline-container">
      <!-- Núcleo central: cliente (ahora parte del timeline) -->
      <div class="core-hub">
        <div class="core-glow"></div>
        <div class="core-inner">
          <div class="core-icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
            </svg>
          </div>
          <div class="core-label">CLIENTE</div>
        </div>
        <div class="core-particles">
          <div class="c-particle p1"></div>
          <div class="c-particle p2"></div>
          <div class="c-particle p3"></div>
          <div class="c-particle p4"></div>
          <div class="c-particle p5"></div>
        </div>
      </div>
    
      <!-- Línea del timeline que sale del centro del cliente -->
      <div class="timeline-line">
        <!-- Efectos decorativos en la línea -->
        <div class="timeline-pulse pulse-1"></div>
        <div class="timeline-pulse pulse-2"></div>
        <div class="timeline-pulse pulse-3"></div>
      </div>
      
      <!-- Iconos interactivos del timeline -->
      <div class="timeline-icons">
        <!-- Paso 1: Descubrimiento -->
        <div class="timeline-icon-wrapper" data-step="1">
          <div class="icon-connector"></div>
          <div class="timeline-icon" aria-label="Descubrimiento">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
              <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
            </svg>
            <span class="icon-number">01</span>
            <div class="icon-glow"></div>
          </div>
          
          <!-- Tarjeta de información (oculta inicialmente) -->
          <div class="info-card">
            <div class="card-decoration top-left"></div>
            <div class="card-decoration top-right"></div>
            <div class="card-decoration bottom-left"></div>
            <div class="card-decoration bottom-right"></div>
            <div class="card-header">
              <h3><span class="glitch-text" data-text="Descubrimiento">Descubrimiento</span></h3>
              <button class="close-btn" aria-label="Cerrar">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
              </button>
            </div>
            <div class="card-content">
              <div class="content-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
                  <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
                </svg>
              </div>
              <p>Entendemos tus necesidades y objetivos de negocio para definir claramente el alcance del proyecto.</p>
            </div>
            <div class="card-light"></div>
            <div class="card-scanline"></div>
          </div>
        </div>
        
        <!-- Paso 2: Planificación -->
        <div class="timeline-icon-wrapper" data-step="2">
          <div class="icon-connector"></div>
          <div class="timeline-icon" aria-label="Planificación">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            <span class="icon-number">02</span>
            <div class="icon-glow"></div>
          </div>
          
          <div class="info-card">
            <div class="card-decoration top-left"></div>
            <div class="card-decoration top-right"></div>
            <div class="card-decoration bottom-left"></div>
            <div class="card-decoration bottom-right"></div>
            <div class="card-header">
              <h3><span class="glitch-text" data-text="Planificación">Planificación</span></h3>
              <button class="close-btn" aria-label="Cerrar">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
              </button>
            </div>
            <div class="card-content">
              <div class="content-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                  <line x1="16" y1="2" x2="16" y2="6"></line>
                  <line x1="8" y1="2" x2="8" y2="6"></line>
                  <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
              </div>
              <p>Creamos sprints de trabajo priorizando las características que aportan mayor valor a tu negocio.</p>
            </div>
            <div class="card-light"></div>
            <div class="card-scanline"></div>
          </div>
        </div>
        
        <!-- Paso 3: Desarrollo -->
        <div class="timeline-icon-wrapper" data-step="3">
          <div class="icon-connector"></div>
          <div class="timeline-icon" aria-label="Desarrollo">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="16 18 22 12 16 6"></polyline>
              <polyline points="8 6 2 12 8 18"></polyline>
            </svg>
            <span class="icon-number">03</span>
            <div class="icon-glow"></div>
          </div>
          
          <div class="info-card">
            <div class="card-decoration top-left"></div>
            <div class="card-decoration top-right"></div>
            <div class="card-decoration bottom-left"></div>
            <div class="card-decoration bottom-right"></div>
            <div class="card-header">
              <h3><span class="glitch-text" data-text="Desarrollo">Desarrollo</span></h3>
              <button class="close-btn" aria-label="Cerrar">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
              </button>
            </div>
            <div class="card-content">
              <div class="content-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="16 18 22 12 16 6"></polyline>
                  <polyline points="8 6 2 12 8 18"></polyline>
                </svg>
              </div>
              <p>Implementamos soluciones en ciclos cortos, manteniendo la flexibilidad para adaptarnos a nuevos requisitos.</p>
            </div>
            <div class="card-light"></div>
            <div class="card-scanline"></div>
          </div>
        </div>
        
        <!-- Paso 4: Pruebas -->
        <div class="timeline-icon-wrapper" data-step="4">
          <div class="icon-connector"></div>
          <div class="timeline-icon" aria-label="Pruebas">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
              <polyline points="15 3 21 3 21 9"></polyline>
              <line x1="10" y1="14" x2="21" y2="3"></line>
            </svg>
            <span class="icon-number">04</span>
            <div class="icon-glow"></div>
          </div>
          
          <div class="info-card">
            <div class="card-decoration top-left"></div>
            <div class="card-decoration top-right"></div>
            <div class="card-decoration bottom-left"></div>
            <div class="card-decoration bottom-right"></div>
            <div class="card-header">
              <h3><span class="glitch-text" data-text="Pruebas">Pruebas</span></h3>
              <button class="close-btn" aria-label="Cerrar">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
              </button>
            </div>
            <div class="card-content">
              <div class="content-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                  <polyline points="15 3 21 3 21 9"></polyline>
                  <line x1="10" y1="14" x2="21" y2="3"></line>
                </svg>
              </div>
              <p>Validamos continuamente las soluciones con usuarios reales para garantizar una experiencia óptima.</p>
            </div>
            <div class="card-light"></div>
            <div class="card-scanline"></div>
          </div>
        </div>
        
        <!-- Paso 5: Entrega -->
        <div class="timeline-icon-wrapper" data-step="5">
          <div class="icon-connector"></div>
          <div class="timeline-icon" aria-label="Entrega">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
              <polyline points="22 4 12 14.01 9 11.01"></polyline>
            </svg>
            <span class="icon-number">05</span>
            <div class="icon-glow"></div>
          </div>
          
          <div class="info-card">
            <div class="card-decoration top-left"></div>
            <div class="card-decoration top-right"></div>
            <div class="card-decoration bottom-left"></div>
            <div class="card-decoration bottom-right"></div>
            <div class="card-header">
              <h3><span class="glitch-text" data-text="Entrega">Entrega</span></h3>
              <button class="close-btn" aria-label="Cerrar">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
              </button>
            </div>
            <div class="card-content">
              <div class="content-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
              </div>
              <p>Implementamos las versiones finales y aseguramos una transición sin problemas a la operación.</p>
            </div>
            <div class="card-light"></div>
            <div class="card-scanline"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <style>
    /* Variables y estilos base */
    .cyber-cycle {
      position: relative;
      width: 100%;
      max-width: 1200px;
      margin: 3rem auto 6rem;
      padding: 0 1.5rem;
      box-sizing: border-box;
    }
    
    /* Fondo con grid */
    .grid-background {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        linear-gradient(to right, rgba(128, 90, 213, 0.1) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(128, 90, 213, 0.1) 1px, transparent 1px);
      background-size: 40px 40px;
      z-index: -1;
      opacity: 0.4;
    }
    
    /* Contenedor de timeline completo */
    .timeline-container {
      position: relative;
      width: 100%;
      display: flex;
      align-items: center;
      min-height: 250px;
    }
    
    /* Núcleo central - Cliente */
    .core-hub {
      position: relative;
      width: 130px;
      height: 130px;
      z-index: 10;
      flex-shrink: 0;
    }
    
    .core-glow {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 130px;
      height: 130px;
      background: rgba(138, 66, 255, 0.3);
      border-radius: 50%;
      filter: blur(20px);
      z-index: -1;
      animation: core-glow-pulse 3s ease-in-out infinite alternate;
    }
    
    @keyframes core-glow-pulse {
      0% {
        opacity: 0.5;
        transform: translate(-50%, -50%) scale(1);
      }
      100% {
        opacity: 0.8;
        transform: translate(-50%, -50%) scale(1.3);
      }
    }
    
    .core-inner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 110px;
      height: 110px;
      background: rgba(20, 20, 40, 0.7);
      border: 2px solid rgba(138, 66, 255, 0.6);
      border-radius: 50%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 10;
      box-shadow: 
        0 0 20px rgba(138, 66, 255, 0.5),
        inset 0 0 15px rgba(138, 66, 255, 0.5);
      backdrop-filter: blur(5px);
      animation: core-pulse 5s ease-in-out infinite alternate;
    }
    
    @keyframes core-pulse {
      0%, 100% {
        box-shadow: 
          0 0 20px rgba(138, 66, 255, 0.5),
          inset 0 0 15px rgba(138, 66, 255, 0.5);
      }
      50% {
        box-shadow: 
          0 0 30px rgba(138, 66, 255, 0.7),
          inset 0 0 25px rgba(138, 66, 255, 0.7);
      }
    }
    
    .core-icon {
      color: var(--purple);
      width: 38px;
      height: 38px;
      margin-bottom: 0.25rem;
      filter: drop-shadow(0 0 5px rgba(138, 66, 255, 0.8));
    }
    
    .core-label {
      font-family: var(--font-mono);
      font-weight: 800;
      font-size: 0.85rem;
      color: var(--purple);
      letter-spacing: 1px;
      text-shadow: 0 0 10px rgba(138, 66, 255, 0.8);
    }
    
    .core-ring::before, .core-ring::after {
      content: '';
      position: absolute;
      width: 6px;
      height: 6px;
      background: var(--purple);
      border-radius: 50%;
      box-shadow: 0 0 10px var(--purple), 0 0 20px var(--purple);
    }
    
    .core-ring::before {
      top: 50%;
      left: -3px;
      transform: translateY(-50%);
    }
    
    .core-ring::after {
      top: -3px;
      left: 50%;
      transform: translateX(-50%);
    }
    
    @keyframes ring-rotate {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
    
    .core-particles {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
    
    .c-particle {
      position: absolute;
      width: 3px;
      height: 3px;
      background: var(--purple);
      border-radius: 50%;
      opacity: 0.7;
      box-shadow: 0 0 10px var(--purple);
    }
    
    .p1 { top: 0; left: 50%; animation: particle-orbit 3s linear infinite; }
    .p2 { top: 50%; left: 0; animation: particle-orbit 5s linear infinite; animation-delay: 1s; }
    .p3 { top: 100%; left: 50%; animation: particle-orbit 7s linear infinite; animation-delay: 2s; }
    .p4 { top: 50%; left: 100%; animation: particle-orbit 6s linear infinite; animation-delay: 0.5s; }
    .p5 { top: 25%; left: 75%; animation: particle-orbit 4s linear infinite; animation-delay: 1.5s;     }
    
    @keyframes particle-orbit {
      0% {
        transform: rotate(0deg) translateX(75px) rotate(0deg);
      }
      100% {
        transform: rotate(360deg) translateX(75px) rotate(-360deg);
      }
    }
    
    /* Línea del timeline */
    .timeline-line {
      position: absolute;
      background: rgba(138, 66, 255, 0.4);
      overflow: hidden;
      backdrop-filter: blur(5px);
      z-index: 1;
      border-radius: 4px;
    }
    
    /* Pulsos que recorren la línea */
    .timeline-pulse {
      position: absolute;
      background: linear-gradient(90deg, transparent, var(--purple), transparent);
      opacity: 0.7;
      border-radius: 4px;
    }
    
    /* Contenedor de iconos */
    .timeline-icons {
      position: relative;
      z-index: 2;
      display: flex;
    }
    
    /* Íconos individuales con conectores */
    .timeline-icon-wrapper {
      position: relative;
    }
    
    .icon-connector {
      position: absolute;
      background: var(--purple);
      z-index: 1;
    }
    
    .timeline-icon {
      position: relative;
      width: 60px;
      height: 60px;
      background: rgba(20, 20, 40, 0.8);
      border: 2px solid rgba(138, 66, 255, 0.6);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      z-index: 3;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(5px);
    }
    
    .timeline-icon svg {
      width: 28px;
      height: 28px;
      color: var(--purple);
      filter: drop-shadow(0 0 5px rgba(138, 66, 255, 0.8));
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .icon-number {
      position: absolute;
      bottom: -6px;
      right: -6px;
      width: 24px;
      height: 24px;
      background: var(--purple);
      color: white;
      font-size: 0.7rem;
      font-family: var(--font-mono);
      font-weight: 700;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 0 10px rgba(138, 66, 255, 0.7);
    }
    
    /* Efecto glow en los iconos */
    .icon-glow {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      background: transparent;
      z-index: -1;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    /* Hover effect para desktops */
    @media (hover: hover) {
      .timeline-icon:hover {
        transform: translateY(-5px);
      }
      
      .timeline-icon:hover .icon-glow {
        box-shadow: 0 0 20px var(--purple), 0 0 30px var(--purple);
        animation: icon-pulse 1.5s infinite alternate;
      }
      
      .timeline-icon:hover svg {
        transform: scale(1.1);
      }
    }
    
    /* Animación para el efecto de hover */
    @keyframes icon-pulse {
      0% {
        box-shadow: 0 0 20px var(--purple), 0 0 30px var(--purple);
        opacity: 0.8;
      }
      100% {
        box-shadow: 0 0 25px var(--purple), 0 0 40px var(--purple);
        opacity: 1;
      }
    }
    
    /* Tarjetas de información */
    .info-card {
      position: absolute;
      background: rgba(20, 20, 40, 0.85);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(138, 66, 255, 0.4);
      border-radius: 12px;
      padding: 1.5rem;
      width: 320px;
      z-index: 4;
      opacity: 0;
      visibility: hidden;
      transform: scale(0.95) translateY(0);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
      overflow: hidden;
    }
    
    .info-card.active {
      opacity: 1;
      visibility: visible;
      transform: scale(1) translateY(0);
      transition-duration: 0.5s;
    }
    
    /* Decoraciones de las tarjetas */
    .card-decoration {
      position: absolute;
      width: 40px;
      height: 40px;
      pointer-events: none;
    }
    
    .top-left {
      top: 0;
      left: 0;
      border-top: 2px solid var(--purple);
      border-left: 2px solid var(--purple);
      border-top-left-radius: 8px;
    }
    
    .top-right {
      top: 0;
      right: 0;
      border-top: 2px solid var(--purple);
      border-right: 2px solid var(--purple);
      border-top-right-radius: 8px;
    }
    
    .bottom-left {
      bottom: 0;
      left: 0;
      border-bottom: 2px solid var(--purple);
      border-left: 2px solid var(--purple);
      border-bottom-left-radius: 8px;
    }
    
    .bottom-right {
      bottom: 0;
      right: 0;
      border-bottom: 2px solid var(--purple);
      border-right: 2px solid var(--purple);
      border-bottom-right-radius: 8px;
    }
    
    /* Estilización de contenido de tarjetas */
    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.25rem;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid rgba(138, 66, 255, 0.3);
    }
    
    .card-header h3 {
      margin: 0;
      font-size: 1.5rem;
      color: white;
      font-weight: 700;
      text-shadow: 0 0 5px rgba(255, 255, 255, 0.3);
      position: relative;
    }
    
    /* Efecto glitch para los títulos */
    .glitch-text {
      position: relative;
      display: inline-block;
    }
    
    .glitch-text::before,
    .glitch-text::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0.8;
    }
    
    .glitch-text::before {
      color: #0ff;
      z-index: -1;
      animation: glitch-anim-1 5s infinite linear alternate-reverse;
    }
    
    .glitch-text::after {
      color: #f0f;
      z-index: -2;
      animation: glitch-anim-2 3s infinite linear alternate-reverse;
    }
    
    @keyframes glitch-anim-1 {
      0%, 100% { transform: none; opacity: 0.2; }
      50% { transform: translate(-2px, 1px); opacity: 0.4; }
      51% { transform: none; opacity: 0.2; }
      60% { transform: translate(1px, -1px); opacity: 0.3; }
      90% { transform: none; opacity: 0.2; }
    }
    
    @keyframes glitch-anim-2 {
      0%, 100% { transform: none; opacity: 0.2; }
      25% { transform: translate(2px, 0); opacity: 0.3; }
      35% { transform: none; opacity: 0.2; }
      75% { transform: translate(-1px, 1px); opacity: 0.4; }
      85% { transform: none; opacity: 0.2; }
    }
    
    .close-btn {
      background: transparent;
      border: none;
      color: rgba(255, 255, 255, 0.7);
      cursor: pointer;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 32px;
      height: 32px;
      border-radius: 50%;
      transition: all 0.2s ease;
    }
    
    .close-btn:hover {
      background: rgba(255, 255, 255, 0.1);
      color: white;
    }
    
    .close-btn svg {
      width: 20px;
      height: 20px;
    }
    
    .card-content {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
    }
    
    .content-icon {
      flex-shrink: 0;
      width: 48px;
      height: 48px;
      color: var(--purple);
      filter: drop-shadow(0 0 5px rgba(138, 66, 255, 0.8));
      animation: content-icon-pulse 3s infinite alternate;
    }
    
    @keyframes content-icon-pulse {
      0% {
        filter: drop-shadow(0 0 3px rgba(138, 66, 255, 0.6));
        transform: scale(1);
      }
      100% {
        filter: drop-shadow(0 0 8px rgba(138, 66, 255, 0.9));
        transform: scale(1.1);
      }
    }
    
    .card-content p {
      margin: 0;
      font-size: 1rem;
      line-height: 1.6;
      color: rgba(255, 255, 255, 0.9);
    }
    
    /* Efectos especiales */
    .card-light {
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(138, 66, 255, 0.2), transparent);
      z-index: -1;
      animation: card-light 3s infinite;
    }
    
    @keyframes card-light {
      0% {
        left: -100%;
      }
      100% {
        left: 100%;
      }
    }
    
    .card-scanline {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom,
        transparent 0%,
        rgba(138, 66, 255, 0.05) 50%,
        transparent 100%
      );
      background-size: 100% 4px;
      pointer-events: none;
      z-index: 3;
      opacity: 0.3;
      animation: scanline 8s linear infinite;
    }
    
    @keyframes scanline {
      0% {
        background-position: 0 0;
      }
      100% {
        background-position: 0 100%;
      }
    }
    
    /* Modo Horizontal (Desktop) */
    @media (min-width: 769px) {
      .timeline-container {
        flex-direction: row;
        margin-top: 3rem;
        min-height: 150px;
      }
      
      /* La línea sale exactamente del centro del círculo cliente */
      .timeline-line {
        top: 50%;
        left: 130px; /* Centro del cliente */
        width: calc(100% - 130px);
        height: 4px;
        transform: translateY(-50%);
        /* Asegurar que comienza exactamente en medio del círculo cliente */
        left: 100px; /* Ancho del core-hub */
      }
      
      .timeline-pulse {
        top: 0;
        width: 40%;
        height: 100%;
      }
      
      .pulse-1 { animation: pulse-horizontal 5s linear infinite; }
      .pulse-2 { animation: pulse-horizontal 5s linear infinite; animation-delay: 1.66s; }
      .pulse-3 { animation: pulse-horizontal 5s linear infinite; animation-delay: 3.33s; }
      
      @keyframes pulse-horizontal {
        0% {
          left: -40%;
        }
        100% {
          left: 100%;
        }
      }
      
      .timeline-icons {
        width: calc(100% - 130px); /* Descontar el ancho del core-hub */
        margin-left: 20px; /* Espacio para separar del cliente */
        height: 100%;
        justify-content: space-between;
        align-items: center;
      }
      
      .timeline-icon-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        position: relative;
        flex: 1;
      }
      
      /* Conectores verticales en desktop */
      .icon-connector {
        width: 2px;
        height: 40px;
        bottom: 50%;
        left: 50%;
        transform: translateX(-50%);
        margin-bottom: 10px;
      }
      
      /* Alternancia arriba/abajo para las tarjetas en escritorio */
      .timeline-icon-wrapper:nth-child(odd) .info-card {
        bottom: calc(100% + 20px);
        left: 50%;
        transform: translateX(-50%) scale(0.95);
        transform-origin: bottom center;
      }
      
      .timeline-icon-wrapper:nth-child(odd) .info-card.active {
        transform: translateX(-50%) scale(1);
      }
      
      .timeline-icon-wrapper:nth-child(odd) .info-card::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 10px solid rgba(20, 20, 40, 0.85);
      }
      
      .timeline-icon-wrapper:nth-child(even) .info-card {
        top: calc(100% + 20px);
        left: 50%;
        transform: translateX(-50%) scale(0.95);
        transform-origin: top center;
      }
      
      .timeline-icon-wrapper:nth-child(even) .info-card.active {
        transform: translateX(-50%) scale(1);
      }
      
      .timeline-icon-wrapper:nth-child(even) .info-card::after {
        content: '';
        position: absolute;
        top: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-bottom: 10px solid rgba(20, 20, 40, 0.85);
      }
      
      /* Ajustes para primer y último elemento */
      .timeline-icon-wrapper:first-child .info-card {
        left: 0;
        transform: translateX(0) scale(0.95);
      }
      
      .timeline-icon-wrapper:first-child .info-card.active {
        transform: translateX(0) scale(1);
      }
      
      .timeline-icon-wrapper:first-child .info-card::after {
        left: 32px;
      }
      
      .timeline-icon-wrapper:last-child .info-card {
        left: auto;
        right: 0;
        transform: translateX(0) scale(0.95);
      }
      
      .timeline-icon-wrapper:last-child .info-card.active {
        transform: translateX(0) scale(1);
      }
      
      .timeline-icon-wrapper:last-child .info-card::after {
        left: auto;
        right: 32px;
      }
      
      /* Agregar conectores verticales entre la línea y los íconos */
      .timeline-icon-wrapper:nth-child(odd) .icon-connector {
        top: 50%;
        bottom: auto;
      }
      
      .timeline-icon-wrapper:nth-child(even) .timeline-icon {
        margin-top: auto;
      }
      
      .timeline-icon-wrapper:nth-child(even) .icon-connector {
        top: 0;
        bottom: auto;
        margin-bottom: 0;
        margin-top: 10px;
      }
    }
    
    /* Modo Vertical (Mobile) - CORREGIDO PARA MOSTRAR CORRECTAMENTE LAS TARJETAS */
    @media (max-width: 768px) {
      .cyber-cycle {
        margin: 2rem auto 4rem;
      }
      
      .timeline-container {
        flex-direction: column;
        align-items: center;
        padding-top: 2rem;
        margin-top: 1rem;
      }
      
      .core-hub {
        margin-bottom: 3rem;
      }
      
      /* Centrar la línea vertical en mobile y hacerla salir del círculo cliente */
      .timeline-line {
        top: 130px; /* Sale desde abajo del cliente que tiene 100px de altura */
        left: 50%; /* Centrado */
        width: 4px;
        height: calc(100% - 130px); /* Resto del espacio */
        transform: translateX(-50%);
      }
      
      .timeline-pulse {
        left: 0;
        width: 100%;
        height: 30%;
      }
      
      .pulse-1 { animation: pulse-vertical 5s linear infinite; }
      .pulse-2 { animation: pulse-vertical 5s linear infinite; animation-delay: 1.66s; }
      .pulse-3 { animation: pulse-vertical 5s linear infinite; animation-delay: 3.33s; }
      
      @keyframes pulse-vertical {
        0% {
          top: -30%;
        }
        100% {
          top: 100%;
        }
      }
      
      .timeline-icons {
        flex-direction: column;
        align-items: center; /* Centrado */
        gap: 3rem;
        width: 100%;
        margin-top: 0;
        padding-top: 20px;
      }
      
      /* Conectores horizontales en móvil - ajustados para salir del centro */
      .icon-connector {
        height: 2px;
        width: 30px;
        top: 50%;
        transform: translateY(-50%);
      }
      
      /* Alternar los conectores a derecha e izquierda */
      .timeline-icon-wrapper:nth-child(odd) .icon-connector {
        left: -30px;
      }
      
      .timeline-icon-wrapper:nth-child(even) .icon-connector {
        right: -30px;
        left: auto;
      }
      
      /* CORRECCIÓN: Posicionamiento central de las tarjetas en móvil */
      .timeline-icon-wrapper {
        width: 100%;
        display: flex;
        justify-content: center;
        position: relative;
      }
      
      /* Ajustamos el desplazamiento alternando izquierda y derecha para los iconos */
      .timeline-icon-wrapper:nth-child(odd) {
        padding-left: 40px;
      }
      
      .timeline-icon-wrapper:nth-child(even) {
        padding-right: 40px;
      }
      
      /* CORRECCIÓN: Posicionamiento de las tarjetas informativas */
      .info-card {
        max-width: 280px; /* Reducido para mejor ajuste en móvil */
        width: 90vw; /* Ancho responsivo */
        position: fixed; /* Fijo en la pantalla */
        top: 50%; /* Centrado vertical */
        left: 50%; /* Centrado horizontal */
        transform: translate(-50%, -50%) scale(0.95); /* Centrado absoluto */
        z-index: 100; /* Aseguramos que está por encima de todo */
      }
      
      .info-card.active {
        transform: translate(-50%, -50%) scale(1);
      }
      
      /* Añadimos un fondo semi-transparente cuando la tarjeta está activa */
      .timeline-icon-wrapper .info-card::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.7);
        z-index: -1;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease;
      }
      
      .timeline-icon-wrapper .info-card.active::before {
        opacity: 1;
        visibility: visible;
      }
      
      /* Eliminamos los pseudoelementos de flecha que ya no necesitamos */
      .timeline-icon-wrapper .info-card::after {
        display: none;
      }
      
      /* Mejoramos el estilo del botón de cierre para que sea más visible */
      .info-card .close-btn {
        background: rgba(138, 66, 255, 0.2);
        width: 36px;
        height: 36px;
      }
      
      .info-card .close-btn:hover,
      .info-card .close-btn:focus {
        background: rgba(138, 66, 255, 0.4);
      }
    }
    
    /* Ajustes para pantallas muy pequeñas */
    @media (max-width: 480px) {
      .info-card {
        width: 85vw;
        padding: 1.25rem;
      }
      
      .card-header h3 {
        font-size: 1.25rem;
      }
      
      .content-icon {
        width: 36px;
        height: 36px;
      }
      
      .card-content p {
        font-size: 0.9rem;
      }
      
      .timeline-icon {
        width: 54px;
        height: 54px;
      }
      
      .timeline-icon svg {
        width: 24px;
        height: 24px;
      }
      
      .timeline-icons {
        gap: 2.5rem;
      }
    }
    
    /* Estilo para iconos activos */
    .timeline-icon.active {
      transform: translateY(-5px);
    }
    
    .timeline-icon.active .icon-glow {
      box-shadow: 0 0 20px var(--purple), 0 0 30px var(--purple);
      animation: icon-pulse 1.5s infinite alternate;
    }
    
    .timeline-icon.active svg {
      transform: scale(1.1);
    }
    
    /* Animación para el efecto aleatorio de glow */
    .timeline-icon.random-glow .icon-glow {
      animation: random-icon-pulse 1.5s ease-in-out;
    }
    
    @keyframes random-icon-pulse {
      0%, 100% {
        box-shadow: 0 0 5px var(--purple);
        opacity: 0.2;
      }
      50% {
        box-shadow: 0 0 25px var(--purple), 0 0 35px var(--purple);
        opacity: 1;
      }
    }
  </style>
  
<script>
  // Script para manejar la interactividad del timeline con correcciones TypeScript
  document.addEventListener('DOMContentLoaded', () => {
    const iconWrappers = document.querySelectorAll('.timeline-icon-wrapper');
    // Definición de tipo explícito para activeCard
    let activeCard: HTMLElement | null = null;
    
    // Función para cerrar todas las tarjetas
    const closeAllCards = (): void => {
      document.querySelectorAll('.info-card').forEach(card => {
        card.classList.remove('active');
      });
      document.querySelectorAll('.timeline-icon').forEach(icon => {
        icon.classList.remove('active');
      });
      activeCard = null;
      
      // Restaurar el scroll si estábamos en móvil
      if (window.innerWidth <= 768) {
        document.body.style.overflow = '';
      }
    };
    
    // Agregar manejadores de eventos para cada icono
    iconWrappers.forEach(wrapper => {
      const icon = wrapper.querySelector('.timeline-icon');
      const card = wrapper.querySelector('.info-card');
      const closeBtn = wrapper.querySelector('.close-btn');
      
      // Verificar que icon y card existan antes de continuar
      if (!icon || !card) return;
      
      // Evento para abrir/cerrar tarjeta al hacer clic en el icono
      icon.addEventListener('click', (e) => {
        e.stopPropagation();
        
        // Si la tarjeta está activa, cerrarla
        if (card.classList.contains('active')) {
          card.classList.remove('active');
          icon.classList.remove('active');
          activeCard = null;
          
          // Restaurar scroll en móvil
          if (window.innerWidth <= 768) {
            document.body.style.overflow = '';
          }
        } else {
          // Cerrar la tarjeta actualmente activa (si hay)
          closeAllCards();
          
          // Abrir esta tarjeta
          card.classList.add('active');
          icon.classList.add('active');
          activeCard = card as HTMLElement;
          
          // Evitar scroll en móvil cuando la tarjeta está abierta
          if (window.innerWidth <= 768) {
            document.body.style.overflow = 'hidden';
          }
        }
      });
      
      // Evento para el botón de cerrar
      if (closeBtn) {
        closeBtn.addEventListener('click', (e) => {
          e.stopPropagation();
          card.classList.remove('active');
          icon.classList.remove('active');
          activeCard = null;
          
          // Restaurar scroll en móvil
          if (window.innerWidth <= 768) {
            document.body.style.overflow = '';
          }
        });
      }
    });
    
    // Cerrar tarjetas al hacer clic fuera de ellas
    document.addEventListener('click', (e) => {
      // Usar type casting para acceder a closest
      const target = e.target as HTMLElement;
      
      if (target && !target.closest('.info-card') && !target.closest('.timeline-icon')) {
        closeAllCards();
      }
    });
    
    // Prevenir que los clics dentro de las tarjetas las cierren
    document.querySelectorAll('.info-card').forEach(card => {
      card.addEventListener('click', (e) => {
        e.stopPropagation();
      });
    });
    
    // Manejar eventos touch para móviles
    let touchStartX = 0;
    let touchStartY = 0;
    
    document.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
      touchStartY = e.changedTouches[0].screenY;
    }, { passive: true });
    
    document.addEventListener('touchend', (e) => {
      // Usar type casting para acceder a closest
      const target = e.target as HTMLElement;
      
      // Solo procesar si no estamos tocando un ícono o tarjeta
      if (target && !target.closest('.info-card') && !target.closest('.timeline-icon')) {
        const touchEndX = e.changedTouches[0].screenX;
        const touchEndY = e.changedTouches[0].screenY;
        
        // Calcular distancia del swipe
        const diffX = Math.abs(touchEndX - touchStartX);
        const diffY = Math.abs(touchEndY - touchStartY);
        
        // Si el usuario hizo un swipe significativo, cerrar todas las tarjetas
        if (diffX > 50 || diffY > 50) {
          closeAllCards();
        }
      }
    }, { passive: true });
    
    // Funcionalidad de animación aleatoria para los iconos cuando no hay nada abierto
    const randomGlow = (): void => {
      if (!activeCard) {
        const randomWrapper = iconWrappers[Math.floor(Math.random() * iconWrappers.length)];
        const randomIcon = randomWrapper.querySelector('.timeline-icon');
        
        if (randomIcon) {
          randomIcon.classList.add('random-glow');
          
          setTimeout(() => {
            randomIcon.classList.remove('random-glow');
          }, 1500);
        }
      }
    };
    
    // Ejecutar animaciones aleatorias cada cierto tiempo
    setInterval(randomGlow, 3000);
    
    // Añadir evento de escucha para el cambio de tamaño de ventana
    window.addEventListener('resize', () => {
      // Si hay una tarjeta activa y estamos cambiando entre modos de visualización,
      // cerramos la tarjeta para evitar problemas de posicionamiento
      if (activeCard && ((window.innerWidth > 768 && window.innerWidth <= 769) || 
                         (window.innerWidth <= 768 && window.innerWidth > 767))) {
        closeAllCards();
      }
    });
    
    // Manejar escape key para cerrar tarjetas
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && activeCard) {
        closeAllCards();
      }
    });
  });
</script>