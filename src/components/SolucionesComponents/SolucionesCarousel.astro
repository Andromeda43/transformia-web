---
// SolucionesCarousel.astro - Componente principal del carrusel
import DesarrolloSlide from './CarouselSlides/DesarrolloSlide.astro';
import TransformacionSlide from './CarouselSlides/TransformacionSlide.astro';
import InteligenciaSlide from './CarouselSlides/InteligenciaSlide.astro';
import AsesoriaSlide from './CarouselSlides/AsesoriaSlide.astro';
---

<div class="carousel-container">
  <!-- Navegación del carrusel -->
  <div class="carousel-nav">
    <button class="nav-button active" data-index="0">
      <span class="nav-dot"></span>
      <span class="nav-label">Desarrollo</span>
    </button>
    <button class="nav-button" data-index="1">
      <span class="nav-dot"></span>
      <span class="nav-label">Transformación</span>
    </button>
    <button class="nav-button" data-index="2">
      <span class="nav-dot"></span>
      <span class="nav-label">Inteligencia</span>
    </button>
    <button class="nav-button" data-index="3">
      <span class="nav-dot"></span>
      <span class="nav-label">Asesoría</span>
    </button>
  </div>
  
  <!-- Slides del carrusel con controles laterales -->
  <div class="carousel-content">
    <!-- Botón anterior para desktop -->
    <button class="control-button prev-button desktop-only" aria-label="Anterior">
      <div class="button-glow"></div>
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M19 12H5"></path>
        <path d="M12 19L5 12L12 5"></path>
      </svg>
    </button>
    
    <!-- Slides del carrusel -->
    <div class="carousel-slides">
      <div class="carousel-slide active" data-index="0">
        <DesarrolloSlide />
      </div>
      
      <div class="carousel-slide" data-index="1">
        <TransformacionSlide />
      </div>
      
      <div class="carousel-slide" data-index="2">
        <InteligenciaSlide />
      </div>
      
      <div class="carousel-slide" data-index="3">
        <AsesoriaSlide />
      </div>
    </div>
    
    <!-- Botón siguiente para desktop -->
    <button class="control-button next-button desktop-only" aria-label="Siguiente">
      <div class="button-glow"></div>
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M5 12H19"></path>
        <path d="M12 5L19 12L12 19"></path>
      </svg>
    </button>
  </div>
  
  <!-- Controles para móvil (debajo del carrusel) -->
  <div class="mobile-controls">
    <button class="control-button prev-button" aria-label="Anterior">
      <div class="button-glow"></div>
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M19 12H5"></path>
        <path d="M12 19L5 12L12 5"></path>
      </svg>
    </button>
    
    <button class="control-button next-button" aria-label="Siguiente">
      <div class="button-glow"></div>
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M5 12H19"></path>
        <path d="M12 5L19 12L12 19"></path>
      </svg>
    </button>
  </div>
</div>

<style>
  .carousel-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
  }
  
  /* Navegación del carrusel */
  .carousel-nav {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
    background: rgba(20, 20, 40, 0.5);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(176, 66, 255, 0.3);
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    z-index: 5;
    position: relative;
    flex-wrap: wrap; /* Permitir que los elementos se ajusten en pantallas pequeñas */
    width: 100%; /* Ancho completo */
    max-width: 800px; /* Ancho máximo */
    box-sizing: border-box;
  }
  
  .nav-button {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.7);
    font-family: var(--font-mono);
    font-size: 0.9rem;
    font-weight: 700;
    letter-spacing: 0.5px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .nav-button::after {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 2px;
    background-color: var(--purple);
    transition: width 0.3s ease;
  }
  
  .nav-button:hover::after, 
  .nav-button.active::after {
    width: 80%;
  }
  
  .nav-button:nth-child(2)::after {
    background-color: var(--blue);
  }
  
  .nav-button:nth-child(3)::after {
    background-color: var(--pink);
  }
  
  .nav-button:nth-child(4)::after {
    background-color: var(--yellow);
  }
  
  .nav-button:hover, 
  .nav-button.active {
    color: white;
  }
  
  .nav-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
  }
  
  .nav-button:hover .nav-dot, 
  .nav-button.active .nav-dot {
    background-color: var(--purple);
    box-shadow: 0 0 8px var(--purple);
  }
  
  .nav-button:nth-child(2):hover .nav-dot, 
  .nav-button:nth-child(2).active .nav-dot {
    background-color: var(--blue);
    box-shadow: 0 0 8px var(--blue);
  }
  
  .nav-button:nth-child(3):hover .nav-dot, 
  .nav-button:nth-child(3).active .nav-dot {
    background-color: var(--pink);
    box-shadow: 0 0 8px var(--pink);
  }
  
  .nav-button:nth-child(4):hover .nav-dot, 
  .nav-button:nth-child(4).active .nav-dot {
    background-color: var(--yellow);
    box-shadow: 0 0 8px var(--yellow);
  }
  
  /* Contenedor para slides y botones laterales */
  .carousel-content {
    position: relative;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    box-sizing: border-box;
  }
  
  /* Slides del carrusel */
  .carousel-slides {
    position: relative;
    min-height: 500px;
    width: 100%;
    overflow: hidden;
    border-radius: 16px;
    box-sizing: border-box;
  }
  
  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    transform: translateX(50px);
    transition: opacity 0.8s ease, transform 0.8s ease, visibility 0s linear 0.8s;
    box-sizing: border-box;
  }
  
  .carousel-slide.active {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
    transition: opacity 0.5s ease, transform 0.8s ease, visibility 0s linear;
  }
  
  /* Botones de control */
  .control-button {
    background: rgba(20, 20, 40, 0.8);
    border: 1px solid rgba(176, 66, 255, 0.5);
    color: white;
    width: 44px;
    height: 44px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 15px rgba(176, 66, 255, 0.3);
    flex-shrink: 0; /* Evitar que se reduzca el tamaño */
    z-index: 5;
  }
  
  .button-glow {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(176, 66, 255, 0.3), transparent);
    animation: button-glow 3s ease-in-out infinite;
  }
  
  @keyframes button-glow {
    0% {
      left: -100%;
    }
    50%, 100% {
      left: 100%;
    }
  }
  
  .control-button:hover {
    background: rgba(176, 66, 255, 0.3);
    box-shadow: 0 0 15px rgba(176, 66, 255, 0.7), 0 0 25px rgba(176, 66, 255, 0.5);
    transform: translateY(-3px);
  }
  
  .control-button svg {
    position: relative;
    z-index: 2;
  }
  
  /* Controles para móvil (debajo del carrusel) */
  .mobile-controls {
    display: none; /* Oculto en desktop */
    justify-content: center;
    gap: 2rem;
    margin-top: 1.5rem;
  }
  
  /* Utilidad para mostrar/ocultar en móvil y desktop */
  .desktop-only {
    display: flex;
  }
  
  /* Media queries para responsividad */
  @media (max-width: 1024px) {
    .carousel-nav {
      max-width: 700px;
    }
  }
  
  @media (max-width: 768px) {
    .carousel-nav {
      padding: 0.6rem 1.2rem;
      gap: 0.75rem;
      max-width: 600px;
    }
    
    .nav-button {
      font-size: 0.85rem;
      padding: 0.4rem 0.8rem;
    }
    
    .carousel-slides {
      min-height: 650px;
    }
    
    /* Cambiar a controles debajo en tablets */
    .desktop-only {
      display: none;
    }
    
    .mobile-controls {
      display: flex;
    }
  }
  
  @media (max-width: 576px) {
    .carousel-nav {
      padding: 0.5rem 1rem;
      gap: 0.5rem;
      flex-wrap: wrap;
      justify-content: center;
    }
    
    .nav-button {
      font-size: 0.8rem;
      padding: 0.35rem 0.7rem;
      min-width: calc(50% - 0.5rem); /* 2 botones por fila */
    }
    
    .carousel-slides {
      min-height: 700px;
      border-radius: 12px;
    }
    
    .control-button {
      width: 38px;
      height: 38px;
    }
    
    .control-button svg {
      width: 20px;
      height: 20px;
    }
  }
  
  @media (max-width: 420px) {
    .carousel-nav {
      padding: 0.4rem 0.8rem;
      gap: 0.4rem;
    }
    
    .nav-button {
      font-size: 0.75rem;
      padding: 0.3rem 0.6rem;
    }
    
    .nav-dot {
      width: 8px;
      height: 8px;
    }
    
    .control-button {
      width: 36px;
      height: 36px;
    }
    
    .control-button svg {
      width: 18px;
      height: 18px;
    }
  }
</style>

<script>
  // Script mejorado para el carrusel
  document.addEventListener('DOMContentLoaded', function() {
    let currentIndex = 0;
    const navButtons = document.querySelectorAll('.nav-button');
    const slides = document.querySelectorAll('.carousel-slide');
    const nextButtons = document.querySelectorAll('.next-button');
    const prevButtons = document.querySelectorAll('.prev-button');
    
    // Iniciar carrusel
    function initCarousel() {
      updateSlide(0); // Iniciar con el primer slide
      
      // Añadir eventos a los botones de navegación
      navButtons.forEach(function(button) {
        button.addEventListener('click', function(e) {
          const target = e.currentTarget as HTMLElement;
          const index = parseInt(target.dataset.index || '0');
          updateSlide(index);
        });
      });
      
      // Eventos de los botones de control - Para todos los botones "next"
      nextButtons.forEach(function(button) {
        button.addEventListener('click', function() {
          goToNextSlide();
        });
      });
      
      // Eventos de los botones de control - Para todos los botones "prev"
      prevButtons.forEach(function(button) {
        button.addEventListener('click', function() {
          goToPrevSlide();
        });
      });
      
      // Soporte para swipe en móviles
      setupSwipeSupport();
    }
    
    // Actualizar slide activo
    function updateSlide(index: number) {
      // Guardar índice actual
      currentIndex = index;
      
      // Actualizar clases active
      navButtons.forEach(function(btn, idx) {
        if (idx === index) {
          btn.classList.add('active');
        } else {
          btn.classList.remove('active');
        }
      });
      
      slides.forEach(function(slide, idx) {
        if (idx === index) {
          slide.classList.add('active');
        } else {
          slide.classList.remove('active');
        }
      });
    }
    
    // Ir al siguiente slide
    function goToNextSlide() {
      const newIndex = (currentIndex + 1) % slides.length;
      updateSlide(newIndex);
    }
    
    // Ir al slide anterior
    function goToPrevSlide() {
      const newIndex = (currentIndex - 1 + slides.length) % slides.length;
      updateSlide(newIndex);
    }
    
    // Configurar soporte para swipe en móviles
    function setupSwipeSupport() {
      const carousel = document.querySelector('.carousel-slides');
      if (!carousel) return;
      
      let touchStartX = 0;
      let touchEndX = 0;
      
      // Corrección de tipos para los eventos touch
      carousel.addEventListener('touchstart', function(e) {
        if (e instanceof TouchEvent) {
          touchStartX = e.changedTouches[0].screenX;
        }
      }, { passive: true });
      
      carousel.addEventListener('touchend', function(e) {
        if (e instanceof TouchEvent) {
          touchEndX = e.changedTouches[0].screenX;
          handleSwipe();
        }
      }, { passive: true });
      
      function handleSwipe() {
        const swipeThreshold = 50; // Umbral mínimo para reconocer un swipe
        
        if (touchEndX < touchStartX - swipeThreshold) {
          // Swipe a la izquierda - Siguiente slide
          goToNextSlide();
        }
        
        if (touchEndX > touchStartX + swipeThreshold) {
          // Swipe a la derecha - Slide anterior
          goToPrevSlide();
        }
      }
    }
    
    // Iniciar carrusel
    initCarousel();
  });
</script>